#!/usr/bin/env bash


#### Variables ==start ####

export PATH="/usr/local/sbin:/usr/local/bin:/usr/libexec:/sbin:/bin:/usr/sbin:/usr/bin:/usr/bin/X11:/usr/games"
UNIT="node-bmw"
APP_DIR="/usr/local/${UNIT}"
OLD_PWD="${PWD}"

#### Variables ==final ####


#### Functions ==start ####

log() {
	logger -s -t "${UNIT}" "${1}"
}

sleep_msg() {
	log "Sleeping."
	#sleep 1
}

follow() {
	journalctl -o cat -u ${UNIT} -f
}

status() {
	echo -e "Checking status of ${UNIT}.\n"
	systemctl status ${UNIT}
}

restart() {
	stop
	sleep_msg
	start
	sleep_msg
	status
}

stop() {
	log "Stopping ${UNIT}."
	systemctl stop ${UNIT}
	sleep_msg
	status
}

start() {
	log "Starting ${UNIT}."
	systemctl start ${UNIT}
	sleep_msg
	status
}

update() {
	cd ${APP_DIR}

	GIT_BRANCH="$(git branch | grep '*' | sed 's/^*\ //g')"
	git fetch origin ${GIT_BRANCH} > /dev/null 2>&1

	GIT_LOG="$(git log HEAD..origin/${GIT_BRANCH} --oneline)"

	if [[ -z "${GIT_LOG}" ]]; then
		log "No ${UNIT} update needed"
	else
		log "${UNIT} update available!"

		log "Downloading ${UNIT} update"
		git fetch
		git pull

		log "Performing npm global update"
		npm -g update

		NPM_DEPS=($(grep -A 20 dependencies ${APP_DIR}/package.json | awk -F '"' '/".*.".*:*.".*."/ {print $2}'))
		log "Updating npm dependencies: '${NPM_DEPS[@]}'"

		# Loop and update npm dependencies
		for DEP in ${NPM_DEPS[@]}; do
			log "Updating '${DEP}'"
			if [[ "${DEP}" == "serialport" ]]; then
				npm -g install --unsafe-perm ${DEP}
			else
				npm -g install ${DEP}
			fi
		done

		restart
	fi

	cd "${OLD_PWD}"
}

#### Functions ==final ####

[[ ${1} ]] && ${1} || status
